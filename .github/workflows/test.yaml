name: Build RHEL container image
on:
  push:
  workflow_dispatch:
jobs:
  build:
    name: Build container image
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04 ]
        action-image: [ registry.access.redhat.com/ubi8, registry.access.redhat.com/ubi9, '' ]
        use-image: [ registry.access.redhat.com/rhel7, registry.access.redhat.com/ubi8, registry.access.redhat.com/ubi8-minimal, registry.access.redhat.com/ubi9, registry.access.redhat.com/ubi9-minimal ]
    env:
        DNF: dnf
    steps:
      - uses: actions/checkout@v2
      - uses: ./podman-entitlement
        with:
          org: ${{ secrets.redhat_org }}
          activationkey: ${{ secrets.redhat_activationkey }}
          image: ${{ matrix.action-image }}
        if: matrix.action-image != ''
      - uses: ./podman-entitlement
        with:
          org: ${{ secrets.redhat_org }}
          activationkey: ${{ secrets.redhat_activationkey }}
        if: matrix.action-image == ''
      - run: echo "DNF=yum" >> $GITHUB_ENV
        if: contains( matrix.use-image, 'rhel7')
      - run: echo "DNF=microdnf" >> $GITHUB_ENV
        if: endsWith( matrix.use-image, '-minimal')
      - run: set -o pipefail ; podman run --rm ${{ matrix.use-image }} $DNF install -y zsh | tee podman-run.log
      - run: mkdir build ; ( echo "FROM ${{ matrix.use-image }}" ; echo "RUN $DNF install -y zsh" ) | tee build/Dockerfile
      - run: podman build build | tee podman-build.log
      - uses: ./upload-artifact-encrypt
        with:
          name: podman-run.log
          path: podman-run.log
          secret: ${{ secrets.upload_secret }}
  check:
    name: Check the logs (that should have been encrypted)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: podman-run.log
      - run: |
          ! grep 'zsh.*\.el.\.x86_64' podman-run.log
      - run: rm -f podman-run.log
      - uses: actions/checkout@v2
      - uses: ./download-artifact-decrypt
        with:
          name: podman-run.log
          secret: ${{ secrets.upload_secret }}
      - run: cat podman-run.log
      - run: grep 'zsh.*\.el.\.x86_64' podman-run.log
